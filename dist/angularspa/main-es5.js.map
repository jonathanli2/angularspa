{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/applicationInsights.service.ts","webpack:///src/app/errorHandler.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","http","applicationInsightsService","title","titleField","textField","resultField","isOnLocalHost","serviceUrl","logTrace","window","location","host","startsWith","val","hello","v1","console","log","v","m","value","call","a","str","get","subscribe","resp","setValue","JSON","stringify","data","name","post","responseType","onLogin","onClick","onTempTest","onTempTest2","onClickStorage","selector","templateUrl","styleUrls","AppModule","provide","useClass","declarations","providers","bootstrap","ApplicationInsightsService","appInsights","config","instrumentationKey","enableAutoRouteTracking","loadAppInsights","url","trackPageView","uri","properties","trackEvent","average","trackMetric","exception","severityLevel","trackException","message","trackTrace","providedIn","ErrorHandlerService","error","logException","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient, HttpClientJsonpModule } from '@angular/common/http';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { ApplicationInsightsService } from './applicationInsights.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'angularspa';\n  titleField = new FormControl('title');\n  textField = new FormControl('data');\n  resultField = new FormControl('');\n\n  serviceUrl: string;\n\n  constructor(private http: HttpClient, public applicationInsightsService: ApplicationInsightsService) {\n    if (this.isOnLocalHost()) {\n      this.serviceUrl = 'http://localhost:8080';\n    } else {\n      this.serviceUrl = 'https://springapitestli.azurewebsites.net';\n    }\n  }\n\n  ngOnInit(){\n    this.applicationInsightsService.logTrace('HomeComponent ngOnInit');\n  }\n\n  isOnLocalHost() {\n    return window.location.host.startsWith('localhost');\n  }\n\n  async hello() {\n    return 'hello';\n  }\n\n  async onSync() {\n    const val = this.hello();\n    val.then(v1 => {\n      console.log(v1);\n    });\n\n    const v = await this.hello();\n    console.log(v);\n  }\n\n  onTempTest() {\n    let m = this.hello;\n    if (this.textField.value) {\n      m = null;\n    }\n    m.call(this);\n  }\n\n  onTempTest2() {\n    try {\n      let m = this.hello;\n      if (this.textField.value) {\n        m = null;\n      }\n      m.call(this);\n    }\n    catch(a) {\n      console.log('exception happened: ' + a);\n    }\n  }\n\n  onClick() {\n    console.log('call backend api to get data');\n    const str = this.titleField.value;\n    this.http.get(this.serviceUrl + '/jsonapi/' + str).subscribe((resp) => {\n      this.resultField.setValue(JSON.stringify(resp));\n    });\n  }\n\n  onClickStorage(id) {\n    if (id === 0) {\n      const data = {\n        name: this.titleField.value,\n        data: this.textField.value,\n      };\n\n      this.http.post(this.serviceUrl + '/storages/', data).subscribe((resp) => {\n        this.resultField.setValue(resp);\n      });\n    } else if (id === 1) {\n      this.http.get(this.serviceUrl + '/storages/').subscribe((resp) => {\n        this.resultField.setValue(resp);\n      });\n    } else if (id === 2) {\n      this.http\n        .delete(this.serviceUrl + '/storages/' + this.titleField.value)\n        .subscribe((resp) => {\n          this.resultField.setValue(resp);\n        });\n    } else if (id === 3) {\n      this.http\n        .get(this.serviceUrl + '/storages/' + this.titleField.value, {responseType: 'text'})\n        .subscribe((resp) => {\n          this.resultField.setValue(resp);\n        });\n    }\n  }\n\n  onLogin() {\n    console.log('start user login');\n  }\n}\n","<div class=\"content\" role=\"main\">\n  <div><strong>SPA web app</strong></div>\n  <div>Input subject</div>\n  <div><input style=\"width: 50%;\" type=\"text\" [formControl]=\"titleField\" /></div>\n  <P></P>\n  <div>Input Data</div>\n  <div><textarea style=\"width: 50%;\" rows=\"12\" [formControl]=\"textField\"></textarea></div>\n  <p></p>\n  <div>Output:</div>\n  <div><textarea style=\"width: 50%;\" rows=\"12\" [formControl]=\"resultField\"></textarea></div>\n  <div><button (click)=\"onLogin()\">Log in (not implemented)</button></div>\n  <div><button (click)=\"onClick()\">Call backend, set subject text to 'title' (/jsonapi/title) </button></div>\n  <div><button (click)=\"onTempTest()\">temp test</button><button (click)=\"onTempTest2()\">temp test2</button></div>\n  <div>\n    <button (click)=\"onClickStorage(0)\">Storage upload (set store name as subject, data in data</button>\n    <button (click)=\"onClickStorage(1)\">Storage list (no param required)</button>\n    <button (click)=\"onClickStorage(2)\">Storage delete (set subject as store name)</button>\n    <button (click)=\"onClickStorage(3)\">Storage download (set subject as store name)</button>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ErrorHandlerService } from './errorHandler.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [{provide: ErrorHandler, useClass: ErrorHandlerService}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { ApplicationInsights } from '@microsoft/applicationinsights-web';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\n// This service is used to implement Azure Application Insights service\r\nexport class ApplicationInsightsService {\r\n\r\n  appInsights: ApplicationInsights;\r\n\r\n  constructor() {\r\n    this.appInsights = new ApplicationInsights({\r\n      config: {\r\n        instrumentationKey: environment.instrumentationKey,\r\n        enableAutoRouteTracking: true\r\n      }\r\n    });\r\n\r\n    this.appInsights.loadAppInsights();\r\n  }\r\n\r\n  logPageView(name?: string, url?: string) { // option to call manually\r\n    this.appInsights.trackPageView({\r\n      name,\r\n      uri: url\r\n    });\r\n  }\r\n\r\n  logEvent(name: string, properties?: { [key: string]: any }) {\r\n    this.appInsights.trackEvent({ name}, properties);\r\n  }\r\n\r\n  logMetric(name: string, average: number, properties?: { [key: string]: any }) {\r\n    this.appInsights.trackMetric({ name, average }, properties);\r\n  }\r\n\r\n  logException(exception: Error, severityLevel?: number) {\r\n    this.appInsights.trackException({ exception, severityLevel });\r\n  }\r\n\r\n  logTrace(message: string, properties?: { [key: string]: any }) {\r\n    this.appInsights.trackTrace({ message}, properties);\r\n  }\r\n\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { ApplicationInsightsService } from './applicationInsights.service';\r\n\r\n@Injectable()\r\n\r\nexport class ErrorHandlerService extends ErrorHandler {\r\n  constructor( private applicationInsightsService: ApplicationInsightsService) {\r\n    super();\r\n  }\r\n\r\n  handleError(error: Error) {\r\n    this.applicationInsightsService.logException(error);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  instrumentationKey: 'a6582b7d-223f-4241-9dd3-670de3c8187e'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}