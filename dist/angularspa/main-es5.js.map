{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","http","title","titleField","textField","resultField","isOnLocalHost","serviceUrl","window","location","host","startsWith","val","hello","v1","console","log","v","str","value","get","subscribe","resp","setValue","JSON","stringify","data","name","post","responseType","onLogin","onClick","onSync","onClickStorage","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient, HttpClientJsonpModule } from '@angular/common/http';\nimport { ActivatedRouteSnapshot } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'angularspa';\n  titleField = new FormControl('title');\n  textField = new FormControl('data');\n  resultField = new FormControl('');\n\n  serviceUrl: string;\n\n  constructor(private http: HttpClient) {\n    if (this.isOnLocalHost()) {\n      this.serviceUrl = 'http://localhost:8080';\n    } else {\n      this.serviceUrl = 'https://springapitestli.azurewebsites.net';\n    }\n  }\n\n  isOnLocalHost() {\n    return window.location.host.startsWith('localhost');\n  }\n\n  async hello() {\n    return 'hello';\n  }\n\n  async onSync() {\n    const val = this.hello();\n    val.then(v1 => {\n      console.log(v1);\n    });\n\n    const v = await this.hello();\n    console.log(v);\n  }\n\n  onClick() {\n    console.log('call backend api to get data');\n    const str = this.textField.value;\n    this.http.get(this.serviceUrl + '/jsonapi/' + str).subscribe((resp) => {\n      this.resultField.setValue(JSON.stringify(resp));\n    });\n  }\n\n  onClickStorage(id) {\n    if (id === 0) {\n      const data = {\n        name: this.titleField.value,\n        data: this.textField.value,\n      };\n\n      this.http.post(this.serviceUrl + '/storages/', data).subscribe((resp) => {\n        this.resultField.setValue(resp);\n      });\n    } else if (id === 1) {\n      this.http.get(this.serviceUrl + '/storages/').subscribe((resp) => {\n        this.resultField.setValue(resp);\n      });\n    } else if (id === 2) {\n      this.http\n        .delete(this.serviceUrl + '/storages/' + this.titleField.value)\n        .subscribe((resp) => {\n          this.resultField.setValue(resp);\n        });\n    } else if (id === 3) {\n      this.http\n        .get(this.serviceUrl + '/storages/' + this.titleField.value, {responseType: 'text'})\n        .subscribe((resp) => {\n          this.resultField.setValue(resp);\n        });\n    }\n  }\n\n  onLogin() {\n    console.log('start user login');\n  }\n}\n","<div class=\"content\" role=\"main\">\n  <div><strong>SPA web app</strong></div>\n  <div>Input subject</div>\n  <div><input style=\"width: 50%;\" type=\"text\" [formControl]=\"titleField\" /></div>\n  <P></P>\n  <div>Input Data</div>\n  <div><textarea style=\"width: 50%;\" rows=\"12\" [formControl]=\"textField\"></textarea></div>\n  <p></p>\n  <div>Output:</div>\n  <div><textarea style=\"width: 50%;\" rows=\"12\" [formControl]=\"resultField\"></textarea></div>\n  <div><button (click)=\"onLogin()\">Log in (not implemented)</button></div>\n  <div><button (click)=\"onClick()\">Call backend (/jsonapi/subjectData)</button></div>\n  <div><button (click)=\"onSync()\">Sync test (local sync await test)</button></div>\n  <div>\n    <button (click)=\"onClickStorage(0)\">Storage upload</button>\n    <button (click)=\"onClickStorage(1)\">Storage list</button>\n    <button (click)=\"onClickStorage(2)\">Storage delete</button>\n    <button (click)=\"onClickStorage(3)\">Storage download</button>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}