{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/applicationInsights.service.ts","./src/app/errorHandler.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient, HttpClientJsonpModule } from '@angular/common/http';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { ApplicationInsightsService } from './applicationInsights.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'angularspa';\n  titleField = new FormControl('title');\n  textField = new FormControl('data');\n  resultField = new FormControl('');\n\n  serviceUrl: string;\n\n  constructor(private http: HttpClient, public applicationInsightsService: ApplicationInsightsService) {\n    if (this.isOnLocalHost()) {\n      this.serviceUrl = 'http://localhost:8080';\n    } else {\n      this.serviceUrl = 'https://springapitestli.azurewebsites.net';\n    }\n  }\n\n  ngOnInit(){\n    this.applicationInsightsService.logTrace('HomeComponent ngOnInit');\n  }\n\n  isOnLocalHost() {\n    return window.location.host.startsWith('localhost');\n  }\n\n  async hello() {\n    return 'hello';\n  }\n\n  async onSync() {\n    const val = this.hello();\n    val.then(v1 => {\n      console.log(v1);\n    });\n\n    const v = await this.hello();\n    console.log(v);\n  }\n\n  onTempTest() {\n    let m = this.hello;\n    if (this.textField.value) {\n      m = null;\n    }\n    m.call(this);\n  }\n\n  onTempTest2() {\n    try {\n      let m = this.hello;\n      if (this.textField.value) {\n        m = null;\n      }\n      m.call(this);\n    }\n    catch(a) {\n      console.log('exception happened: ' + a);\n    }\n  }\n\n  onClick() {\n    console.log('call backend api to get data');\n    const str = this.titleField.value;\n    this.http.get(this.serviceUrl + '/jsonapi/' + str).subscribe((resp) => {\n      this.resultField.setValue(JSON.stringify(resp));\n    });\n  }\n\n  onClickStorage(id) {\n    if (id === 0) {\n      const data = {\n        name: this.titleField.value,\n        data: this.textField.value,\n      };\n\n      this.http.post(this.serviceUrl + '/storages/', data).subscribe((resp) => {\n        this.resultField.setValue(resp);\n      });\n    } else if (id === 1) {\n      this.http.get(this.serviceUrl + '/storages/').subscribe((resp) => {\n        this.resultField.setValue(resp);\n      });\n    } else if (id === 2) {\n      this.http\n        .delete(this.serviceUrl + '/storages/' + this.titleField.value)\n        .subscribe((resp) => {\n          this.resultField.setValue(resp);\n        });\n    } else if (id === 3) {\n      this.http\n        .get(this.serviceUrl + '/storages/' + this.titleField.value, {responseType: 'text'})\n        .subscribe((resp) => {\n          this.resultField.setValue(resp);\n        });\n    }\n  }\n\n  onLogin() {\n    console.log('start user login');\n  }\n}\n","<div class=\"content\" role=\"main\">\n  <div><strong>SPA web app</strong></div>\n  <div>Input subject</div>\n  <div><input style=\"width: 50%;\" type=\"text\" [formControl]=\"titleField\" /></div>\n  <P></P>\n  <div>Input Data</div>\n  <div><textarea style=\"width: 50%;\" rows=\"12\" [formControl]=\"textField\"></textarea></div>\n  <p></p>\n  <div>Output:</div>\n  <div><textarea style=\"width: 50%;\" rows=\"12\" [formControl]=\"resultField\"></textarea></div>\n  <div><button (click)=\"onLogin()\">Log in (not implemented)</button></div>\n  <div><button (click)=\"onClick()\">Call backend, set subject text to 'title' (/jsonapi/title) </button></div>\n  <div><button (click)=\"onTempTest()\">temp test</button><button (click)=\"onTempTest2()\">temp test2</button></div>\n  <div>\n    <button (click)=\"onClickStorage(0)\">Storage upload (set store name as subject, data in data</button>\n    <button (click)=\"onClickStorage(1)\">Storage list (no param required)</button>\n    <button (click)=\"onClickStorage(2)\">Storage delete (set subject as store name)</button>\n    <button (click)=\"onClickStorage(3)\">Storage download (set subject as store name)</button>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ErrorHandlerService } from './errorHandler.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [{provide: ErrorHandler, useClass: ErrorHandlerService}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { ApplicationInsights } from '@microsoft/applicationinsights-web';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\n// This service is used to implement Azure Application Insights service\r\nexport class ApplicationInsightsService {\r\n\r\n  appInsights: ApplicationInsights;\r\n\r\n  constructor() {\r\n    this.appInsights = new ApplicationInsights({\r\n      config: {\r\n        instrumentationKey: environment.instrumentationKey,\r\n        enableAutoRouteTracking: true\r\n      }\r\n    });\r\n\r\n    this.appInsights.loadAppInsights();\r\n  }\r\n\r\n  logPageView(name?: string, url?: string) { // option to call manually\r\n    this.appInsights.trackPageView({\r\n      name,\r\n      uri: url\r\n    });\r\n  }\r\n\r\n  logEvent(name: string, properties?: { [key: string]: any }) {\r\n    this.appInsights.trackEvent({ name}, properties);\r\n  }\r\n\r\n  logMetric(name: string, average: number, properties?: { [key: string]: any }) {\r\n    this.appInsights.trackMetric({ name, average }, properties);\r\n  }\r\n\r\n  logException(exception: Error, severityLevel?: number) {\r\n    this.appInsights.trackException({ exception, severityLevel });\r\n  }\r\n\r\n  logTrace(message: string, properties?: { [key: string]: any }) {\r\n    this.appInsights.trackTrace({ message}, properties);\r\n  }\r\n\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { ApplicationInsightsService } from './applicationInsights.service';\r\n\r\n@Injectable()\r\n\r\nexport class ErrorHandlerService extends ErrorHandler {\r\n  constructor( private applicationInsightsService: ApplicationInsightsService) {\r\n    super();\r\n  }\r\n\r\n  handleError(error: Error) {\r\n    this.applicationInsightsService.logException(error);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  instrumentationKey: 'a6582b7d-223f-4241-9dd3-670de3c8187e'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}