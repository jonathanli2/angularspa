{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient, HttpClientJsonpModule } from '@angular/common/http';\nimport { ActivatedRouteSnapshot } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'angularspa';\n  titleField = new FormControl('title');\n  textField = new FormControl('data');\n  resultField = new FormControl('');\n\n  serviceUrl: string;\n\n  constructor(private http: HttpClient) {\n    if (this.isOnLocalHost()) {\n      this.serviceUrl = 'http://localhost:8080';\n    } else {\n      this.serviceUrl = 'https://springapitestli.azurewebsites.net';\n    }\n  }\n\n  isOnLocalHost() {\n    return window.location.host.startsWith('localhost');\n  }\n\n  async hello() {\n    return 'hello';\n  }\n\n  async onSync() {\n    const val = this.hello();\n    val.then(v1 => {\n      console.log(v1);\n    });\n\n    const v = await this.hello();\n    console.log(v);\n  }\n\n  onClick() {\n    console.log('call backend api to get data');\n    const str = this.textField.value;\n    this.http.get(this.serviceUrl + '/jsonapi/' + str).subscribe((resp) => {\n      this.resultField.setValue(JSON.stringify(resp));\n    });\n  }\n\n  onClickStorage(id) {\n    if (id === 0) {\n      const data = {\n        name: this.titleField.value,\n        data: this.textField.value,\n      };\n\n      this.http.post(this.serviceUrl + '/storages/', data).subscribe((resp) => {\n        this.resultField.setValue(resp);\n      });\n    } else if (id === 1) {\n      this.http.get(this.serviceUrl + '/storages/').subscribe((resp) => {\n        this.resultField.setValue(resp);\n      });\n    } else if (id === 2) {\n      this.http\n        .delete(this.serviceUrl + '/storages/' + this.titleField.value)\n        .subscribe((resp) => {\n          this.resultField.setValue(resp);\n        });\n    } else if (id === 3) {\n      this.http\n        .get(this.serviceUrl + '/storages/' + this.titleField.value, {responseType: 'text'})\n        .subscribe((resp) => {\n          this.resultField.setValue(resp);\n        });\n    }\n  }\n\n  onLogin() {\n    console.log('start user login');\n  }\n}\n","<div class=\"content\" role=\"main\">\n  <div><strong>SPA web app</strong></div>\n  <div>Input subject</div>\n  <div><input style=\"width: 50%;\" type=\"text\" [formControl]=\"titleField\" /></div>\n  <P></P>\n  <div>Input Data</div>\n  <div><textarea style=\"width: 50%;\" rows=\"12\" [formControl]=\"textField\"></textarea></div>\n  <p></p>\n  <div>Output:</div>\n  <div><textarea style=\"width: 50%;\" rows=\"12\" [formControl]=\"resultField\"></textarea></div>\n  <div><button (click)=\"onLogin()\">Log in (not implemented)</button></div>\n  <div><button (click)=\"onClick()\">Call backend (/jsonapi/subjectData)</button></div>\n  <div><button (click)=\"onSync()\">Sync test (local sync await test)</button></div>\n  <div>\n    <button (click)=\"onClickStorage(0)\">Storage upload</button>\n    <button (click)=\"onClickStorage(1)\">Storage list</button>\n    <button (click)=\"onClickStorage(2)\">Storage delete</button>\n    <button (click)=\"onClickStorage(3)\">Storage download</button>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}